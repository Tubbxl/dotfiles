#+TITLE:  Ubuntu 20.04 使用 EasyConnect
#+AUTHOR: Clare Lee
#+EMAIL:  congleetea@gmail.com
#+DATE:   2021 Apr 12
#+OPTIONS: ^:nil

* 问题 
  很多公司内部都会要求使用easyconnect来做代理，但是easyconnect只支持到ubuntu 18，
  现在的ubuntu 20.04 安装之后会出现各种问题。虽然后网上说替换了三个库就可以使用，
  或者在登录时进度条到70%的时候执行另外一个脚本。
  但是我操作的时候替换了可以到登录界面，执行了那个脚本依然不行。显示登录成功了，
  但是一会又掉线了。没有办法在晚上看有没有docker版本的easyconnect，果然已经有人
  开发了 (https://github.com/Hagb/docker-easyconnect)。


* 步骤 
  
** docker安装
   这个是基础的就不用说了，默认可以使用docker了。

** 下载docker镜像
   你可以使用 https://github.com/Hagb/docker-easyconnect 自己编译镜像，也可以直
   接使用Hagb编译的镜像。他为了兼容各种方式，有好几种镜像。我这里就直说一种直接
   通过命令行进行使用的镜像：hagb/docker-easyconnect:cli。

   #+BEGIN_SRC shell
   docker pull hagb/docker-easyconnect:cli
   #+END_SRC

** 命令行执行
   #+BEGIN_SRC shell
     docker run --device /dev/net/tun --cap-add NET_ADMIN -ti \
            -p 127.0.0.1:10800:1080 -e EC_VER=7.6.3 \
            -e CLI_OPTS="-t pwd -d VPN_ADDRESS -u USERNAME -p PASSWORD" hagb/docker-easyconnect:cli
   #+END_SRC
   其中：
   - 127.0.0.1:10800:1080 是把内部代理端口1080映射到宿主机的10800端口，这个端口
     可以你自己选择。但是后续配置需要做相应改动。我们就叫10800端口是 *宿主机代理
     端口* ，该端口是SOCKS5协议的。
   - CLI_OPTS的值是一个字符串，"-t pwd"表示使用密码登录，"-d"表示vpn的地址，"-u"
     表示登录的用户名，"-p"表示登录的密码。 

   执行该镜像日志会显示登录成功。这时候我们的浏览器或者终端就可以通过10800这个代
   理端口进行工作了。

** 使用配置 
   
*** 浏览器使用配置
    浏览器要配置代理，我们使用的是Chrome的SwithyOmega来配置代理。我的电脑本来已
    经有一个shadowsocks的代理了，他使用的是1080端口，所以上面我们配置easyconnect
    的代理端口在宿主机上是10800.

    #+CAPTION: shadowsocks代理配置 
    #+LABEL: fig:SED-HR4049
    [[./images/代理配置-shadowsocks.png]]

    使用New Profile创建一个EasyConnect代理，右侧配置使用10800端口。
    #+CAPTION: easyconnect代理配置 
    #+LABEL: fig:SED-HR4049
    [[./images/代理配置-easyconnect.png]]

    现在，通过1080端口就可以使用原来的shadowsocks代理进行网页访问了(需要
    shadowsocks客户端已经启动)，通过10800端口就可以访问easyconnect代理的公司内网
    服务了。那各种网址怎么选择使用哪一个代理呢？如下图，我们通过"自动切换"进去对
    个网址进行配置。主要是google，github等可以配置走Shadowsocks代理，内网的服务
    比如gitlab地址等，可以走EasyConnect代理。

    #+CAPTION: shell 
    #+LABEL: fig:SED-HR4049
    [[./images/配置特别网址代理.png]]

    这样配置之后浏览器右上角选择SwitchyOmega自动切换。这时候登录内网的，或者
    google等就会各自使用各自的代理了愉快的上网了。

*** 终端指令使用代理配置 
    常见的我们要通过内网比如http://your-inner-net.com 的gitlab服务来下载代码。这
    时候需要git走10800端口的代理。主要包括两部分代理：http/https的代理，通过SSH
    的代理。

    - http/https代理配置
      在~/.gitconfig中配置:
      #+BEGIN_SRC shell
        [http]
        proxy = socks5://127.0.0.1:10800

        [https]
        proxy = socks5://127.0.0.1:10800

      #+END_SRC
      这种情况一般是通过 git clone http://xxxx.com ...来进行访问时使用的。但是我
      们但部分时通过ssh的公钥来免密登录的。这时候我们就要对ssh代理进行配置。

    - ssh代理配置
      首先保证~/.ssh/中已经产生了公钥和秘钥。然后在~/.ssh/config中配置你的gitlab
      服务器：
      #+BEGIN_SRC text
        Host <内网ip> 
             User git
             ProxyCommand nc -v -x 127.0.0.1:10800 %h %p
             ServerAliveInterval 30
             IdentityFile ~/.ssh/id_rsa
      #+END_SRC
      这样配置之后就可以通过终端进行git的操作了。
      

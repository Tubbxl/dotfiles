* dotfiles

This is an awesome config files.

include:

#+BEGIN_SRC text
  .zshrc
  terminator
  gitconfig
  Vagrantfile
  polipo
#+END_SRC

** install ubuntu

   #+BEGIN_SRC text
    usage:
         install-ubuntu.sh init                 : install initial software in init_sws.
         install-ubuntu.sh base                 : install basic software in base_sws.
         install-ubuntu.sh option               : install optional software in option_sws.
         install-ubuntu.sh single SOFTWARE_NAME : install single software.
   #+END_SRC


** link config files

link terminator config, .emacs.d, .zshrc, gitconfig, vimrc(TODO).

- ./configs/terminator.conf ${HOME}/.config/terminator/config
- ./configs/gitconfig ${HOME}/.gitconfig
- ./configs/zshrc.sh ${HOME}/.zshrc
- ./emacs.d  ${HOME}/.emacs.d
- ./configs/vimrc ${HOME}/.vimrc

#+BEGIN_SRC shell
./link_configs.sh
#+END_SRC


** emacs

Here emacs need version 25.+.

*** 编写emacs相关内容的时候，常用的快捷键：

   | 快捷键   | 说明                 |
   |----------+----------------------|
   | Ctrl+h   | 查看帮助             |
   | Ctrl+h f | 查看函数             |
   | Ctrl+h v | 查看变量             |
   | Ctrl+h k | 查看快捷键绑定的函数 |

   | package                     | 说明                                             | link                                    |
   |-----------------------------+--------------------------------------------------+-----------------------------------------|
   | diminish                    |                                                  |                                         |
   | which-key                   | 提示可得的快捷键。                               |                                         |
   | comment-dwim-2              | 设置全局键做注释，可以段注释，行前注释，行尾注释 |                                         |
   | avy                         | 选择跳转到某个字符。                             |                                         |
   | multiple-cursors            |                                                  |                                         |
   | hl-line                     | 强调当前行。                                     |                                         |
   | helm                        | 查找各种文件内容,buffer切换,emacs命令执行等等。  |                                         |
   | hideshow                    | 隐藏显示。                                       |                                         |
   | highlight-symbol            | 符号显示。                                       |                                         |
   | flycheck                    | 语法检测。                                       |                                         |
   | yasnippet                   | 模板工具                                         |                                         |
   | hippie-exp-ext              | 编码补全                                         |                                         |
   | magit                       | git操作                                          |                                         |
   | git-gutter                  | git 项目显示                                     |                                         |
   | ag, helm-ag                 | 查找工具                                         |                                         |
   | projectile, helm-projectile | 项目相关                                         |                                         |
   | company                     | 补全工具                                         | http://company-mode.github.io/          |
   | dired                       | 文件目录操作                                     |                                         |
   | dired-k                     | 像 [[https://github.com/supercrabtree/k][zsh的k一样显示目录]]                            | https://github.com/syohex/emacs-dired-k |
   | evil                        |                                                  | 使用2017版                              |

  helm: 模糊查找文件。


*** ycmd 自动补全

    安装方法参考install-ubuntu.sh ycmd。

    要补全你的c++项目，可以通过YCM-Generator生成.ycm_extra_conf.py 文件。这样emacs打开项目的时后会加载这个文件，通过该文件找到
    补全。

    生成的方法是:

    #+BEGIN_SRC shell
    cd YCM-Generator && ./config_gen.py -x c++ ~/YOUR_PROJECT_PATH
    #+END_SRC

    目前生成的文件找不到系统的c++函数，因此可以在.ycm_extra_conf.py的flags中添加'-I/usr/include/c++/7' (根据你使用的c++版本确定,其他没有包含的路径也可以通过同样的方法加入).


*** GUI不能输入中文

    refer to http://wangzhe3224.github.io/emacs/2015/08/31/fcitx-emacs.html

    - 确保安装zh_CN.UTF-8库
      #+BEGIN_SRC shell
        locale -a
      #+END_SRC
      看是否有zh_CN.utf8，如果没有要安装。

      安装方法：
      #+BEGIN_SRC shell
        sudo apt-get install -y language-pack-zh-hans
      #+END_SRC

    - 配置.zshrc
      #+BEGIN_SRC text
        export LC_CTYPE=zh_CN.UTF-8
      #+END_SRC


    - 在/usr/local/share/application/emacs.desktop中修改

      #+BEGIN_SRC text
        Exec=env LC_CType=zh_CN.UTF-8 emacs %F
      #+END_SRC


*** org 遇到的问题

    - org有时候输出有问题时可能需要删除elc文件重试。
